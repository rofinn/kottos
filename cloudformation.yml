AWSTemplateFormatVersion: 2010-09-09
Description: >-
  AWS IoT Greengrass example template that creates a group version with a core,
  device, function, logger, subscription, and resources.

Parameters:
  # Only pre-reqs should be to
  # 1. Generate the certs and start a core daemon/docker image
  # 2. Created a lambda function from our script, kottos and greengrass
  CoreCertificateArn:
    Type: String
  LambdaVersionArn:
    Type: String
  IsolationMode:
    Type: String
    Default: GreengrassContainer
    AllowedValues:
      - GreengrassContainer
      - NoContainer
  Addresses:
    Type: String
    Default: 127.0.0.1:54321  # Could be a comma separated list

Resources:
  ModbusCore:
    Type: 'AWS::IoT::Thing'
    Properties:
      ThingName: ModbusCore
  ModbusCoreDefinition:
    Type: 'AWS::Greengrass::CoreDefinition'
    Properties:
      Name: ModbusCoreDefinition
  ModbusCoreDefinitionVersion:
    Type: 'AWS::Greengrass::CoreDefinitionVersion'
    Properties:
      CoreDefinitionId: !Ref ModbusCoreDefinition
      Cores:
        - Id: ModbusCore
          CertificateArn: !Ref CoreCertificateArn
          SyncShadow: 'false'
          ThingArn: !Join
            - ':'
            - - 'arn:aws:iot'
              - !Ref 'AWS::Region'
              - !Ref 'AWS::AccountId'
              - thing/ModbusCore
  ModbusFunctionDefinition:
    Type: 'AWS::Greengrass::FunctionDefinition'
    Properties:
      Name: ModbusFunctionDefinition
  ModbusFunctionDefinitionVersion:
    Type: 'AWS::Greengrass::FunctionDefinitionVersion'
    Properties:
      FunctionDefinitionId: !GetAtt
        - ModbusFunctionDefinition
        - Id
      DefaultConfig:
        Execution:
          IsolationMode: !Ref IsolationMode
      Functions:
        - Id: ModbusLambda
          FunctionArn: !Ref LambdaVersionArn
          FunctionConfiguration:
            Pinned: 'true'
            Executable: run.exe
            ExecArgs: argument1
            MemorySize: '512'
            Timeout: '2000'
            EncodingType: binary
            Environment:
              Variables:
                addresses: !Ref Addresses
              AccessSysfs: 'false'
              Execution:
                IsolationMode: !Ref IsolationMode
  # I WAS HERE!
  ModbusSubscriptionDefinition:
    Type: 'AWS::Greengrass::SubscriptionDefinition'
    Properties:
      Name: ModbusSubscriptionDefinition
  ModbusSubscriptionDefinitionVersion:
    Type: 'AWS::Greengrass::SubscriptionDefinitionVersion'
    Properties:
      SubscriptionDefinitionId: !Ref ModbusSubscriptionDefinition
      Subscriptions:
        - Id: ModbusSubscription1
          Source: !Ref LambdaVersionArn
          Subject: kottos/modbus
          Target: cloud
  KottosGroup:
    Type: 'AWS::Greengrass::Group'
    Properties:
      Name: KottosGroupNewName
      RoleArn: !Join
        - ':'
        - - 'arn:aws:iam:'
          - !Ref 'AWS::AccountId'
          - role/service-role/Greengrass_ServiceRole
      InitialVersion:
        CoreDefinitionVersionArn: !Ref ModbusCoreDefinitionVersion
        FunctionDefinitionVersionArn: !Ref ModbusFunctionDefinitionVersion
        SubscriptionDefinitionVersionArn: !Ref ModbusSubscriptionDefinitionVersion
Outputs:
  CommandToDeployGroup:
    Value: !Join
      - ' '
      - - groupVersion=$(cut -d'/' -f6 <<<
        - !GetAtt
          - TestGroup
          - LatestVersionArn
        - );
        - aws --region
        - !Ref 'AWS::Region'
        - greengrass create-deployment --group-id
        - !Ref KottosGroup
        - '--deployment-type NewDeployment --group-version-id'
        - $groupVersion
